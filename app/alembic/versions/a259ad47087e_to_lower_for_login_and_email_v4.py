"""to lower for login and email v4

Revision ID: a259ad47087e
Revises: 4ca40413137a
Create Date: 2025-01-04 19:39:49.491222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a259ad47087e'
down_revision: Union[str, None] = '4ca40413137a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('_login', sa.String(), nullable=False))
    op.add_column('users', sa.Column('_email', sa.String(), nullable=False))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_login_key', 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['_email'])
    op.create_unique_constraint(None, 'users', ['_login'])
    op.drop_column('users', 'login')
    op.drop_column('users', 'email')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('login', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_login_key', 'users', ['login'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_column('users', '_email')
    op.drop_column('users', '_login')
    # ### end Alembic commands ###
